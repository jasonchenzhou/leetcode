Integer to Roman 

Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.

class Solution {
public:
    string intToRoman(int num) {
        vector<pair<string, int>> map = {{"M", 1000}, {"CM", 900}, {"D", 500}, {"CD", 400}, {"C", 100}, {"XC", 90}, {"L", 50}, {"XL", 40}, {"X", 10}, {"IX", 9}, {"V", 5}, {"IV", 4}, {"I", 1}};
        string res;
        while(num > 0){
            for(auto cur : map){
                if(num >= cur.second){
                    res += cur.first;
                    num -= cur.second;
                    break;
                }
            }
        }
        return res;
    }
};


In 900, 400, 90, 40, 9 and 4, Roman put small char before big char. In other case, just put big char before small one which could easily solved by one while loop. So put these special numbers in a vector then write the while loop.
Longest Palindromic Substring

Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

class Solution{
	public:
	    string longestPalindrome(string s){
	        int size = s.size();
	        if(size < 2)  return s;
	        bool v[size][size];
	        string res;
	        for(int len = 1; len <= size; len++){
	            for(int i = 0; i+len-1 < size; i++){
                    int j = i+len-1;
                    if((len <= 2 || v[i+1][j-1]) && s[i] == s[j])  v[i][j] = true;
                    if(v[i][j] == true && len > res.size())  res = s.substr(i, len);
	            }
	        }
	        return res;
	    }
};


We could use DP to solve Palindromic problem. First initialize state with len 1 and 2, then follow v[i][j] = v[i+1][j-1] && s[i]==s[j]
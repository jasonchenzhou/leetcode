Add Two Numbers

You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1)  return l2;
        if(!l2)  return l1;
        ListNode *res = new ListNode(0);
        ListNode *cur = res;
        int car = 0;
        while(l1 || l2 || car!=0){
            int val = car;
            if(l1) {val+=l1->val;  l1 = l1->next;}
            if(l2) {val+=l2->val;  l2 = l2->next;}
            ListNode *tem = new ListNode(val%10);
            car = val/10;
            cur->next = tem;
            cur = cur->next;
        }
        return res->next;
    }
};



Use a while loop to calculate value and carry of each node, then store them in a linked-list
3Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)


class Solution{
	public:
	    vector<vector<int>> threeSum(vector<int>& nums){
            vector<vector<int>> res;
            if(nums.size() < 3)  return res;
            sort(nums.begin(), nums.end());
            for(int i=0; i<nums.size()-2; i++){
                if(i>0 && nums[i]==nums[i-1])  continue;
                int j=i+1, k=nums.size()-1;
                while(j < k){
                    if(j > i+1 && nums[j] == nums[j-1]){j++;  continue;}
                    if(k < nums.size()-1 && nums[k] == nums[k+1]){k--;  continue;}
                    if(nums[i]+nums[j]+nums[k] > 0)  k--;
                    else if(nums[i]+nums[j]+nums[k] < 0)  j++;
                    else{
                        res.push_back({nums[i], nums[j], nums[k]});
                        j++;  k--;
                    }
                }
            }
            return res;
	    }
};


Same thoughts with water container
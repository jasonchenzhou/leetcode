4Sum 

Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note:
Elements in a quadruplet (a,b,c,d) must be in non-descending order. (ie, a ≤ b ≤ c ≤ d)
The solution set must not contain duplicate quadruplets.
    For example, given array S = {1 0 -1 0 -2 2}, and target = 0.

    A solution set is:
    (-1,  0, 0, 1)
    (-2, -1, 1, 2)
    (-2,  0, 0, 2)


class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        if(nums.size() < 4)  return res;
        sort(nums.begin(), nums.end());
        for(int i=0; i<nums.size()-3; i++){
            if(i>0 && nums[i]==nums[i-1])  continue;
            for(int j=i+1; j<nums.size()-2; j++){
                if(j>i+1 && nums[j]==nums[j-1])  continue;
                int m=j+1, n=nums.size()-1;
                while(m < n){
                    if(m>j+1 && nums[m]==nums[m-1]){m++;  continue;}
                    if(n<nums.size()-1 && nums[n]==nums[n+1]){n--;  continue;}
                    int sum = nums[i]+nums[j]+nums[m]+nums[n];
                    if(sum > target)  n--;
                    else if(sum < target)  m++;
                    else{
                        res.push_back({nums[i], nums[j], nums[m], nums[n]});
                        m++;  n--;
                    }
                }
            }
        }
        return res;
    }
};

need to consider duplicate for all 4 parameters